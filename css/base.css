#field {
  font-family: 'Courier New', Courier, monospace;
  font-size: clamp(1vw, 3vw, 4vw);
  background-color: white;
  width: 90vw;
  margin: 0 auto;
  /*  height: 75vh;*/
  background-color: #68BB59;
}
#defense, #los, #offense {
  display: grid;
  /**
	* @todo It'd be great if these columns were generated based on the number of columns via script. Instead of hard-coding here.
	* We could use a parameter with a default in FieldApp.buildField. Then, when building the Field, we place the dynamic nunmber of
	* grid-template-columns on the element in-line, instead of here.
	*/
  grid-template-columns: repeat(10, 6fr 2.5fr) 6fr;
  align-items: stretch;
  justify-items: stretch;
}
/* Gaps */
.grid-item-gap {
  background-color: #ACDF87;
}
#defense, #offense, #los {
  grid-column-start: 1;
  grid-column-end: -1;
  /*  grid-auto-rows: auto;*/
}
#defense, #offense {
  height: 30vh;
}
#los {}
#defense {
  grid-template-rows: [deep] minmax(50px, 6fr) [safety] minmax(50px, 6fr) [linebacker] minmax(50px, 6fr) [defensive_los] minmax(50px, 6fr);
  grid-row-start: 1;
  grid-row-end: 4;
  /*  grid-auto-rows: auto;*/
}
#offense {
  grid-template-rows: [offensive_los] minmax(50px, 6fr) [off] minmax(50px, 6fr) [shotgun] minmax(50px, 6fr) [deep] minmax(50px, 6fr);
  /*  grid-auto-rows: auto;*/
  grid-row-start: 5;
  grid-row-end: 8;
}
#defense > #label_defense, #offense > #label_offense {
  place-self: start;
}
#defense > div {
  place-self: center;
}
#offense > div, #los > div, #defense > div {
  place-self: stretch;
  display: flex;
  justify-content: center;
}
#defense > div {
  align-content: flex-end;
  border-top: 2px solid white;
}
#los > div {
  align-content: space-around;
  font-size: 1rem;
}
#offense > div {
  align-content: flex-start;
  border-bottom: 2px solid white;
}
#offense, #defense {
  /*  row-gap: 5px;*/
}
#los {
  grid-row-start: 4;
  grid-row-end: 5;
  background-color: white;
  color: black;
  align-items: center;
  grid-template-rows: [los] 0.5fr;
}
#defense > div:hover {
  /*  background-color: cyan;*/
}
#offense > .grid-item:hover {
  /*  background-color: magenta;*/
}
#ball-origin {
  color: white;
  grid-column-start: 11;
  grid-row-start: los;
  background: url("../images/football.svg");
  background-repeat: no-repeat;
  background-position: center;
}
#field > div > div {
  /* justify-self: center;
    align-self: center;
	  text-align: center;*/
}
/*
#field > div > div.position-node {
  display: flex;
  justify-content: flex-start;
  align-items: center;
  color: lightgrey;
  background: url("../images/helmet.svg");
  background-repeat: no-repeat;
  background-position: center;
}
*/
#defense .position-node, #defense .helmet-image {
  position: absolute;
  bottom: 0;
}
#defense .has-double-team {
  display: flex;
  flex-direction: column;
}
#defense .has-double-team .position-node {
  position: relative;
}
#offense .position-node, #offense .helmet-image {
  /*  background-color: #890000;*/
  position: absolute;
  top: 0;
}
.grid-item-gap {
  text-align: center;
  /*  font-size: clamp(1vw, 1.5vw, 2vw);*/
  z-index: 10;
}
.grid-item-gap .helmet-image {
  max-width: 48%;
}
.grid-item-gap > div {
  line-height: 1;
}
.grid-item-position {}
#offense .grid-item-position {}
#offense .helmet-image {
  bottom: 0;
}
#defense .grid-item-position {
  position: relative;
}
#defense .helmet-image {}
#defense .half-image .helmet-image {
  max-width: 46%;
}
.grid-item-position .helmet-image {
  position: absolute;
  max-height: 100%
}
.grid-item-position, .grid-item-gap {
  align-items: center;
  position: relative;
}
/**
* Zebra Striping
*/
/* Light Green */
.depth--safety, .depth--defensive_los, .depth--offensive_los, .depth--shotgun {
  /*  background-color: #ACDF87;*/
}
/* Dark Green */
.depth--linebacker, .depth--off, .depth--deep {
  /*  background-color: #68BB59;*/
}
/**
* Position Background Images (or not)
*/
.position-node {
  width: 100%;
  text-align: center;
  z-index: 10;
  color: rgba(255, 255, 255, 1); /* hahaha, hope this works! */
}
#defense.hide-position-text .position-node {
  color: rgba(0, 0, 0, 0); /* hahaha, hope this works! */
  background-color: rgba(0, 0, 0, 0);
}
#defense.hide-position-text .helmet-image {
  top: inherit;
}
.grid-item-gap, .grid-item-position {
  color: #1F1F1F;
  line-height: 1;
}
.gap-text {
  font-size: 80%;
  line-height: 70%;
}
.position-offense {
  line-height: 1;
}
.coord-x-hacked .position-node {
  width: auto;
}
/**
* The Builder Form
*/
form label {
  display: none;
}
#pos-d-1 {
  grid-column-start: 13;
  grid-row-start: 3;
}
#pos-d-2 {
  grid-column-start: 15;
  grid-row-start: 3;
}
#pos-d-3 {
  grid-column-start: 19;
  grid-row-start: 3;
}
#pos-d-4 {
  grid-column-start: 21;
  grid-row-start: 3;
}
#pos-d-5 {
  grid-column-start: 25;
  grid-row-start: 3;
}
#pos-d-6 {
  grid-column-start: 27;
  grid-row-start: 3;
}
#pos-d-7 {
  grid-column-start: 17;
  grid-row-start: 2;
}
#pos-d-8 {
  grid-column-start: 23;
  grid-row-start: 2;
}
#pos-d-9 {
  grid-column-start: 12;
  grid-row-start: 2;
}
#pos-d-10 {
  grid-column-start: 29;
  grid-row-start: 2;
}
#pos-d-11 {
  grid-column-start: 20;
  grid-row-start: 1;
}
/* Blocking Identifier Styles */
.blocking-identifier-1 {
  border: 2px solid black;
  background-color: red;
  color: black;
}
.blocking-identifier-2 {
  border: 2px dashed black;
  background-color: orange;
  color: black;
}
.blocking-identifier-3 {
  border: 2px dashed black;
  background-color: yellow;
  color: black;
}
.blocking-identifier-4 {
  border: 2px dashed black;
  background-color: rgb(0, 204, 255);
  color: black;
}
.blocking-identifier-5 {
  border: 2px dashed black;
  background-color: rgb(0, 100, 255);
  color: black;
}
.blocking-identifier-5 {
  border: 2px dashed white;
  background-color: rgb(0, 50, 150);
  color: white;
}
.blocking-identifier-6 {
  border: 2px dashed black;
  background-color: rgb(50, 150, 150);
  color: black;
}
.blocking-identifier-7 {
  border: 2px dashed white;
  background-color: rgb(50, 25, 50);
  color: white;
}
.blocking-identifier-8 {
  border: 2px dashed black;
  background-color: rgb(50, 250, 150);
  color: black;
}